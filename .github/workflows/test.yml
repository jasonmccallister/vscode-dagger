name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Run type checking, linting, and compilation in parallel
  type-check:
    name: "üîç Type Check"
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Run type checking
      run: yarn run check-types

  lint:
    name: "üîß Lint Code"
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Run linting
      run: yarn run lint

  compile:
    name: "üèóÔ∏è Build Extension"
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Compile extension
      run: node esbuild.js

    - name: Upload compiled extension
      uses: actions/upload-artifact@v4
      with:
        name: compiled-extension
        path: dist/

  # Test jobs that depend on the validation jobs
  test:
    name: "üß™ Test on ${{ matrix.os }}"
    needs: [type-check, lint, compile]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        vscode-version: [stable]
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Download compiled extension
      uses: actions/download-artifact@v4
      with:
        name: compiled-extension
        path: dist/

    - name: Run tests on Linux
      if: runner.os == 'Linux'
      run: |
        # Install xvfb for headless testing on Linux
        sudo apt-get update
        sudo apt-get install -y xvfb
        xvfb-run -a yarn test
      env:
        DISPLAY: ':99.0'

    - name: Run tests on Windows
      if: runner.os == 'Windows'
      run: yarn test

    - name: Run tests on macOS
      if: runner.os == 'macOS'
      run: yarn test

  test-vscode-versions:
    name: "üß™ Test VS Code ${{ matrix.vscode-version }}"
    needs: [type-check, lint, compile]
    strategy:
      matrix:
        os: [ubuntu-latest]
        vscode-version: [stable, insiders]
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Download compiled extension
      uses: actions/download-artifact@v4
      with:
        name: compiled-extension
        path: dist/

    - name: Run tests with VS Code ${{ matrix.vscode-version }}
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
        xvfb-run -a yarn test
      env:
        DISPLAY: ':99.0'
        VSCODE_VERSION: ${{ matrix.vscode-version }}

  # Package job that runs after all tests pass
  package:
    name: "üì¶ Package Extension"
    needs: [test, test-vscode-versions]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Package extension
      run: yarn run package

    - name: Upload package
      uses: actions/upload-artifact@v4
      with:
        name: vscode-extension-package
        path: '*.vsix'
